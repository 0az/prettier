exports[`test Client.js 1`] = `
"/**
 * Client imports some but not all modules,
 * triggering/suppressing parse errors.
 * @flow
 */

// non-flow files should not give parse errors
var A = require(\"./Imported\");          // non-Flow file @providesModule Foo

var B = require(\"./ParseError\");        // Flow file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * Client imports some but not all modules,
 * triggering/suppressing parse errors.
 * @flow
 */
// non-flow files should not give parse errors
// non-Flow file @providesModule Foo
// Flow file
var A = require(\"./Imported\");
var B = require(\"./ParseError\");
"
`;

exports[`test Imported.js 1`] = `
"/**
 * Parse errors, imported, not in flow, no provides module.
 * No parse errors are raised because it is ignored by flow.
 */
function f(s) { ### // illegal token
  return s;
}

module.exports = { f: f }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * Parse errors, imported, not in flow, no provides module.
 * No parse errors are raised because it is ignored by flow.
 */
// illegal token
function f(s) {
  null;
  null;
  null;
  return s;
}
module.exports = { f: f };
"
`;

exports[`test ParseError.js 1`] = `
"// @flow

function foo() { ### // invalid token
}

module.exports = foo;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// @flow
// invalid token
function foo() {
  null;
  null;
  null;
}
module.exports = foo;
"
`;

exports[`test Unimported.js 1`] = `
"/**
 * Parse errors but not in flow and not imported.
 * Should see no parse errors for this file.
 * @providesModule Bar
 */
function f(s:string):string { ### // illegal token
  return s;
}

module.exports = { f: f }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * Parse errors but not in flow and not imported.
 * Should see no parse errors for this file.
 * @providesModule Bar
 */
// illegal token
function f(s: string): string {
  null;
  null;
  null;
  return s;
}
module.exports = { f: f };
"
`;
