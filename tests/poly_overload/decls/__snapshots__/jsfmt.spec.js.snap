exports[`test typescript-deferred.js 1`] = `
"interface Some<X> {}
interface Other<X> { x: X; }
interface None<Y> {}
interface Nada<Y> { y: Y }
interface A<X> {
  foo<Y>(s: Some<X>, e: None<Y>): A<Y>;
  foo<Y>(s: Some<X>, e: Nada<Y>): A<Y>;
  foo<Y>(s: Other<X>, e: None<Y>): A<Y>;
  foo<Y>(s: Other<X>, e: Nada<Y>): A<Y>;
}
interface B<X> extends A<X> {
  foo<Y>(s: Some<X>, e: None<Y>): B<Y>;
  foo<Y>(s: Some<X>, e: Nada<Y>): B<Y>;
  foo<Y>(s: Other<X>, e: None<Y>): B<Y>;
  foo<Y>(s: Other<X>, e: Nada<Y>): B<Y>;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
interface Some<X> extends  {}
interface Other<X> extends  { x: X }
interface None<Y> extends  {}
interface Nada<Y> extends  { y: Y }
interface A<X> extends  {
  foo: : (s: Some<X>, e: None<Y>) => A<Y>,
  foo: : (s: Some<X>, e: Nada<Y>) => A<Y>,
  foo: : (s: Other<X>, e: None<Y>) => A<Y>,
  foo: : (s: Other<X>, e: Nada<Y>) => A<Y>
}
interface B<X> extends A<X> {
  foo: : (s: Some<X>, e: None<Y>) => B<Y>,
  foo: : (s: Some<X>, e: Nada<Y>) => B<Y>,
  foo: : (s: Other<X>, e: None<Y>) => B<Y>,
  foo: : (s: Other<X>, e: Nada<Y>) => B<Y>
}
"
`;
