exports[`test unary.js 1`] = `
"/* @flow */

function x0(y: string): number {
  return +y; // ok, + exists solely for coercion
}

function x1(y: string): number {
  return -y; // error, we don\'t allow coercion here
}

function x3(y: string) {
  return ~y;  // error, we don\'t allow coercion here
}

function x4(y: string): boolean {
  return !y; // ok, coercion is allowed
}

(-1: void); // error, number ~> void
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/* @flow */
// ok, + exists solely for coercion
// error, we don\'t allow coercion here
// error, we don\'t allow coercion here
// ok, coercion is allowed
// error, number ~> void
function x0(y: string): number {
  return +y;
}

function x1(y: string): number {
  return -y;
}

function x3(y: string) {
  return ~y;
}

function x4(y: string): boolean {
  return !y;
}

(-1: void);
"
`;

exports[`test update.js 1`] = `
"// @flow

let tests = [
  function(y: number) {
    y++;
    y--;
    ++y;
    --y;
  },

  function(y: string) {
    y++; // error, we don\'t allow coercion here
    (y: number); // ok, y is a number now
    y++; // error, but you still can\'t write a number to a string
  },

  function(y: string) {
    y--; // error, we don\'t allow coercion here
  },

  function(y: string) {
    ++y; // error, we don\'t allow coercion here
  },

  function(y: string) {
    --y; // error, we don\'t allow coercion here
  },

  function() {
    const y = 123;
    y++; // error, can\'t update const
    y--; // error, can\'t update const
  },

  function(y: any) {
    y++; // ok
  },
];
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// @flow
// error, we don\'t allow coercion here
// ok, y is a number now
// error, but you still can\'t write a number to a string
// error, we don\'t allow coercion here
// error, we don\'t allow coercion here
// error, we don\'t allow coercion here
// error, can\'t update const
// error, can\'t update const
// ok
let tests = [
  function(y: number) {
    y++;

    y--;

    ++y;

    --y;
  },
  function(y: string) {
    y++;

    (y: number);

    y++;
  },
  function(y: string) {
    y--;
  },
  function(y: string) {
    ++y;
  },
  function(y: string) {
    --y;
  },
  function() {
    const y = 123;

    y++;

    y--;
  },
  function(y: any) {
    y++;
  }
];
"
`;
